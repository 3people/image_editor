const config = require('../config/db-config.json');
const mysql = require("mysql");

class Database {
  constructor() {
    this.connection = mysql.createConnection(config);
  }

  query = (sql,args) => {
    return new Promise((resolve, reject) => {
      this.connection.query(sql, args, (error, result, fields) => {
        if (error) return reject(error);
        resolve(result);
      });
    });
  }

  end = () => {
    return new Promise((resolve, reject) => {
      this.connection.end(error => {
        if (error) return reject(error);
        resolve();
      });
    })
  }
}

class Pool {
  constructor(){
    this.connetion = mysql.createPool(config);
  }

  query = (sql, args) => {
    return new Promise((resolve, reject) => {
      this.connection.query(sql, binding, (err, result) => {
        if (err) reject(err);
        resolve(result);
      });
    });
  }


}

const pool = new Pool();
const database = new Database();

module.exports = {
  database,
  pool
}

const connection = () => {
  return new Promise((resolve, reject) => {
  pool.getConnection((err, connection) => {
    if (err) reject(err);
    console.log("MySQL pool connected: threadId " + connection.threadId);
    const query = (sql, binding) => {
      return new Promise((resolve, reject) => {
         connection.query(sql, binding, (err, result) => {
           if (err) reject(err);
           resolve(result);
           });
         });
       };
       const release = () => {
         return new Promise((resolve, reject) => {
           if (err) reject(err);
           console.log("MySQL pool released: threadId " + connection.threadId);
           resolve(connection.release());
         });
       };
       resolve({ query, release });
     });
   });
 };